//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace Trials.GTC.GlobalTrackCentral {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserAndRole", Namespace="http://schemas.datacontract.org/2004/07/Trials.GTC.Web.Services")]
    public partial class UserAndRole : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string EmailAddressField;
        
        private System.Guid IdField;
        
        private System.Collections.ObjectModel.ObservableCollection<string> RolesField;
        
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<string> Roles {
            get {
                return this.RolesField;
            }
            set {
                if ((object.ReferenceEquals(this.RolesField, value) != true)) {
                    this.RolesField = value;
                    this.RaisePropertyChanged("Roles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TracksResults", Namespace="http://schemas.datacontract.org/2004/07/Trials.GTC.Web.Services")]
    public partial class TracksResults : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool IsFilterField;
        
        private int TotalItemsField;
        
        private int TotalPagesField;
        
        private System.Collections.ObjectModel.ObservableCollection<Trials.GTC.GlobalTrackCentral.Track> TracksField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFilter {
            get {
                return this.IsFilterField;
            }
            set {
                if ((this.IsFilterField.Equals(value) != true)) {
                    this.IsFilterField = value;
                    this.RaisePropertyChanged("IsFilter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalItems {
            get {
                return this.TotalItemsField;
            }
            set {
                if ((this.TotalItemsField.Equals(value) != true)) {
                    this.TotalItemsField = value;
                    this.RaisePropertyChanged("TotalItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalPages {
            get {
                return this.TotalPagesField;
            }
            set {
                if ((this.TotalPagesField.Equals(value) != true)) {
                    this.TotalPagesField = value;
                    this.RaisePropertyChanged("TotalPages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Trials.GTC.GlobalTrackCentral.Track> Tracks {
            get {
                return this.TracksField;
            }
            set {
                if ((object.ReferenceEquals(this.TracksField, value) != true)) {
                    this.TracksField = value;
                    this.RaisePropertyChanged("Tracks");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Track", Namespace="http://schemas.datacontract.org/2004/07/Trials.GTC.Data")]
    public partial class Track : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime CreatedField;
        
        private string CreatorField;
        
        private string DescriptionField;
        
        private int DifficultyField;
        
        private bool HasThumbField;
        
        private string HyperlinkField;
        
        private System.Guid IdField;
        
        private string LinkIdField;
        
        private string NameField;
        
        private System.Nullable<double> RatingField;
        
        private System.Nullable<double> ScoreCoefficientField;
        
        private System.Guid SubmittedField;
        
        private string SubmittedByField;
        
        private System.DateTime SubmittedOnField;
        
        private System.Collections.ObjectModel.ObservableCollection<System.Guid> TagsField;
        
        private System.Nullable<System.TimeSpan> TimeGoldField;
        
        private System.Nullable<System.TimeSpan> TimePlatinumField;
        
        private System.Nullable<System.TimeSpan> TimeSilverField;
        
        private System.Nullable<System.TimeSpan> TimeUltimateField;
        
        private int TrialsTypeField;
        
        private int TrialsVersionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Difficulty {
            get {
                return this.DifficultyField;
            }
            set {
                if ((this.DifficultyField.Equals(value) != true)) {
                    this.DifficultyField = value;
                    this.RaisePropertyChanged("Difficulty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasThumb {
            get {
                return this.HasThumbField;
            }
            set {
                if ((this.HasThumbField.Equals(value) != true)) {
                    this.HasThumbField = value;
                    this.RaisePropertyChanged("HasThumb");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Hyperlink {
            get {
                return this.HyperlinkField;
            }
            set {
                if ((object.ReferenceEquals(this.HyperlinkField, value) != true)) {
                    this.HyperlinkField = value;
                    this.RaisePropertyChanged("Hyperlink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LinkId {
            get {
                return this.LinkIdField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkIdField, value) != true)) {
                    this.LinkIdField = value;
                    this.RaisePropertyChanged("LinkId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> ScoreCoefficient {
            get {
                return this.ScoreCoefficientField;
            }
            set {
                if ((this.ScoreCoefficientField.Equals(value) != true)) {
                    this.ScoreCoefficientField = value;
                    this.RaisePropertyChanged("ScoreCoefficient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Submitted {
            get {
                return this.SubmittedField;
            }
            set {
                if ((this.SubmittedField.Equals(value) != true)) {
                    this.SubmittedField = value;
                    this.RaisePropertyChanged("Submitted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubmittedBy {
            get {
                return this.SubmittedByField;
            }
            set {
                if ((object.ReferenceEquals(this.SubmittedByField, value) != true)) {
                    this.SubmittedByField = value;
                    this.RaisePropertyChanged("SubmittedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SubmittedOn {
            get {
                return this.SubmittedOnField;
            }
            set {
                if ((this.SubmittedOnField.Equals(value) != true)) {
                    this.SubmittedOnField = value;
                    this.RaisePropertyChanged("SubmittedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<System.Guid> Tags {
            get {
                return this.TagsField;
            }
            set {
                if ((object.ReferenceEquals(this.TagsField, value) != true)) {
                    this.TagsField = value;
                    this.RaisePropertyChanged("Tags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> TimeGold {
            get {
                return this.TimeGoldField;
            }
            set {
                if ((this.TimeGoldField.Equals(value) != true)) {
                    this.TimeGoldField = value;
                    this.RaisePropertyChanged("TimeGold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> TimePlatinum {
            get {
                return this.TimePlatinumField;
            }
            set {
                if ((this.TimePlatinumField.Equals(value) != true)) {
                    this.TimePlatinumField = value;
                    this.RaisePropertyChanged("TimePlatinum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> TimeSilver {
            get {
                return this.TimeSilverField;
            }
            set {
                if ((this.TimeSilverField.Equals(value) != true)) {
                    this.TimeSilverField = value;
                    this.RaisePropertyChanged("TimeSilver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> TimeUltimate {
            get {
                return this.TimeUltimateField;
            }
            set {
                if ((this.TimeUltimateField.Equals(value) != true)) {
                    this.TimeUltimateField = value;
                    this.RaisePropertyChanged("TimeUltimate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TrialsType {
            get {
                return this.TrialsTypeField;
            }
            set {
                if ((this.TrialsTypeField.Equals(value) != true)) {
                    this.TrialsTypeField = value;
                    this.RaisePropertyChanged("TrialsType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TrialsVersion {
            get {
                return this.TrialsVersionField;
            }
            set {
                if ((this.TrialsVersionField.Equals(value) != true)) {
                    this.TrialsVersionField = value;
                    this.RaisePropertyChanged("TrialsVersion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tag", Namespace="http://schemas.datacontract.org/2004/07/Trials.GTC.Data")]
    public partial class Tag : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid IdField;
        
        private bool IsCompetitionField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCompetition {
            get {
                return this.IsCompetitionField;
            }
            set {
                if ((this.IsCompetitionField.Equals(value) != true)) {
                    this.IsCompetitionField = value;
                    this.RaisePropertyChanged("IsCompetition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Time", Namespace="http://schemas.datacontract.org/2004/07/Trials.GTC.Data")]
    public partial class Time : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int FaultsField;
        
        private System.Guid IdField;
        
        private string LinkField;
        
        private string LinkIdField;
        
        private string RiderField;
        
        private System.TimeSpan Time1Field;
        
        private System.Guid TrackIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Faults {
            get {
                return this.FaultsField;
            }
            set {
                if ((this.FaultsField.Equals(value) != true)) {
                    this.FaultsField = value;
                    this.RaisePropertyChanged("Faults");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Link {
            get {
                return this.LinkField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkField, value) != true)) {
                    this.LinkField = value;
                    this.RaisePropertyChanged("Link");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LinkId {
            get {
                return this.LinkIdField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkIdField, value) != true)) {
                    this.LinkIdField = value;
                    this.RaisePropertyChanged("LinkId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rider {
            get {
                return this.RiderField;
            }
            set {
                if ((object.ReferenceEquals(this.RiderField, value) != true)) {
                    this.RiderField = value;
                    this.RaisePropertyChanged("Rider");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan Time1 {
            get {
                return this.Time1Field;
            }
            set {
                if ((this.Time1Field.Equals(value) != true)) {
                    this.Time1Field = value;
                    this.RaisePropertyChanged("Time1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid TrackId {
            get {
                return this.TrackIdField;
            }
            set {
                if ((this.TrackIdField.Equals(value) != true)) {
                    this.TrackIdField = value;
                    this.RaisePropertyChanged("TrackId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetMessagesResult", Namespace="http://schemas.datacontract.org/2004/07/Trials.GTC.Data")]
    public partial class GetMessagesResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string BodyField;
        
        private System.DateTime DateTimeField;
        
        private System.Guid IdField;
        
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Body {
            get {
                return this.BodyField;
            }
            set {
                if ((object.ReferenceEquals(this.BodyField, value) != true)) {
                    this.BodyField = value;
                    this.RaisePropertyChanged("Body");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTime {
            get {
                return this.DateTimeField;
            }
            set {
                if ((this.DateTimeField.Equals(value) != true)) {
                    this.DateTimeField = value;
                    this.RaisePropertyChanged("DateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventSummaryResult", Namespace="http://schemas.datacontract.org/2004/07/Trials.GTC.Data")]
    public partial class EventSummaryResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<int> FaultsField;
        
        private string NameField;
        
        private System.Nullable<double> PointsField;
        
        private string RiderField;
        
        private System.Nullable<System.TimeSpan> TimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Faults {
            get {
                return this.FaultsField;
            }
            set {
                if ((this.FaultsField.Equals(value) != true)) {
                    this.FaultsField = value;
                    this.RaisePropertyChanged("Faults");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Points {
            get {
                return this.PointsField;
            }
            set {
                if ((this.PointsField.Equals(value) != true)) {
                    this.PointsField = value;
                    this.RaisePropertyChanged("Points");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rider {
            get {
                return this.RiderField;
            }
            set {
                if ((object.ReferenceEquals(this.RiderField, value) != true)) {
                    this.RiderField = value;
                    this.RaisePropertyChanged("Rider");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NewTrack", Namespace="http://schemas.datacontract.org/2004/07/Trials.GTC.Web.Services")]
    public partial class NewTrack : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime CreatedField;
        
        private string CreatorField;
        
        private string DescriptionField;
        
        private int DifficultyField;
        
        private string HyperlinkField;
        
        private byte[] ImageField;
        
        private string LinkIdField;
        
        private string NameField;
        
        private double RatingField;
        
        private double ScoreCoeffientField;
        
        private System.Guid SubmittedField;
        
        private System.Collections.ObjectModel.ObservableCollection<System.Guid> TagsField;
        
        private System.TimeSpan TimeGoldField;
        
        private System.TimeSpan TimePlatinumField;
        
        private System.TimeSpan TimeSilverField;
        
        private System.TimeSpan TimeUltimateField;
        
        private int TrialsTypeField;
        
        private int TrialsVersionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Difficulty {
            get {
                return this.DifficultyField;
            }
            set {
                if ((this.DifficultyField.Equals(value) != true)) {
                    this.DifficultyField = value;
                    this.RaisePropertyChanged("Difficulty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Hyperlink {
            get {
                return this.HyperlinkField;
            }
            set {
                if ((object.ReferenceEquals(this.HyperlinkField, value) != true)) {
                    this.HyperlinkField = value;
                    this.RaisePropertyChanged("Hyperlink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LinkId {
            get {
                return this.LinkIdField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkIdField, value) != true)) {
                    this.LinkIdField = value;
                    this.RaisePropertyChanged("LinkId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ScoreCoeffient {
            get {
                return this.ScoreCoeffientField;
            }
            set {
                if ((this.ScoreCoeffientField.Equals(value) != true)) {
                    this.ScoreCoeffientField = value;
                    this.RaisePropertyChanged("ScoreCoeffient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Submitted {
            get {
                return this.SubmittedField;
            }
            set {
                if ((this.SubmittedField.Equals(value) != true)) {
                    this.SubmittedField = value;
                    this.RaisePropertyChanged("Submitted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<System.Guid> Tags {
            get {
                return this.TagsField;
            }
            set {
                if ((object.ReferenceEquals(this.TagsField, value) != true)) {
                    this.TagsField = value;
                    this.RaisePropertyChanged("Tags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan TimeGold {
            get {
                return this.TimeGoldField;
            }
            set {
                if ((this.TimeGoldField.Equals(value) != true)) {
                    this.TimeGoldField = value;
                    this.RaisePropertyChanged("TimeGold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan TimePlatinum {
            get {
                return this.TimePlatinumField;
            }
            set {
                if ((this.TimePlatinumField.Equals(value) != true)) {
                    this.TimePlatinumField = value;
                    this.RaisePropertyChanged("TimePlatinum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan TimeSilver {
            get {
                return this.TimeSilverField;
            }
            set {
                if ((this.TimeSilverField.Equals(value) != true)) {
                    this.TimeSilverField = value;
                    this.RaisePropertyChanged("TimeSilver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan TimeUltimate {
            get {
                return this.TimeUltimateField;
            }
            set {
                if ((this.TimeUltimateField.Equals(value) != true)) {
                    this.TimeUltimateField = value;
                    this.RaisePropertyChanged("TimeUltimate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TrialsType {
            get {
                return this.TrialsTypeField;
            }
            set {
                if ((this.TrialsTypeField.Equals(value) != true)) {
                    this.TrialsTypeField = value;
                    this.RaisePropertyChanged("TrialsType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TrialsVersion {
            get {
                return this.TrialsVersionField;
            }
            set {
                if ((this.TrialsVersionField.Equals(value) != true)) {
                    this.TrialsVersionField = value;
                    this.RaisePropertyChanged("TrialsVersion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="GlobalTrackCentral.TrackCentral")]
    public interface TrackCentral {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:TrackCentral/ResetUser", ReplyAction="urn:TrackCentral/ResetUserResponse")]
        System.IAsyncResult BeginResetUser(string username, string emailAddress, System.AsyncCallback callback, object asyncState);
        
        string EndResetUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:TrackCentral/RegisterUser", ReplyAction="urn:TrackCentral/RegisterUserResponse")]
        System.IAsyncResult BeginRegisterUser(string username, string password, string emailAddress, System.AsyncCallback callback, object asyncState);
        
        Trials.GTC.GlobalTrackCentral.UserAndRole EndRegisterUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:TrackCentral/LoginUser", ReplyAction="urn:TrackCentral/LoginUserResponse")]
        System.IAsyncResult BeginLoginUser(string username, string password, System.AsyncCallback callback, object asyncState);
        
        Trials.GTC.GlobalTrackCentral.UserAndRole EndLoginUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:TrackCentral/GetTracks", ReplyAction="urn:TrackCentral/GetTracksResponse")]
        System.IAsyncResult BeginGetTracks(int pageNumber, int resultsPerPage, System.Nullable<int> trials, System.Nullable<int> type, System.Nullable<int> difficulty, string creator, string keyword, string sortName, bool sortDirection, System.Collections.ObjectModel.ObservableCollection<System.Guid> tags, System.AsyncCallback callback, object asyncState);
        
        Trials.GTC.GlobalTrackCentral.TracksResults EndGetTracks(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:TrackCentral/GetTrack", ReplyAction="urn:TrackCentral/GetTrackResponse")]
        System.IAsyncResult BeginGetTrack(string linkId, System.AsyncCallback callback, object asyncState);
        
        Trials.GTC.GlobalTrackCentral.Track EndGetTrack(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:TrackCentral/GetTags", ReplyAction="urn:TrackCentral/GetTagsResponse")]
        System.IAsyncResult BeginGetTags(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Trials.GTC.GlobalTrackCentral.Tag> EndGetTags(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:TrackCentral/GetTimes", ReplyAction="urn:TrackCentral/GetTimesResponse")]
        System.IAsyncResult BeginGetTimes(System.Guid trackId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Trials.GTC.GlobalTrackCentral.Time> EndGetTimes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:TrackCentral/GetMessages", ReplyAction="urn:TrackCentral/GetMessagesResponse")]
        System.IAsyncResult BeginGetMessages(System.Guid trackId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Trials.GTC.GlobalTrackCentral.GetMessagesResult> EndGetMessages(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:TrackCentral/GetEventSummary", ReplyAction="urn:TrackCentral/GetEventSummaryResponse")]
        System.IAsyncResult BeginGetEventSummary(System.Guid tagId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Trials.GTC.GlobalTrackCentral.EventSummaryResult> EndGetEventSummary(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:TrackCentral/NewTrack", ReplyAction="urn:TrackCentral/NewTrackResponse")]
        System.IAsyncResult BeginNewTrack(Trials.GTC.GlobalTrackCentral.NewTrack n, System.AsyncCallback callback, object asyncState);
        
        bool EndNewTrack(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:TrackCentral/DeleteTrack", ReplyAction="urn:TrackCentral/DeleteTrackResponse")]
        System.IAsyncResult BeginDeleteTrack(System.Guid id, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteTrack(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:TrackCentral/SubmitTime", ReplyAction="urn:TrackCentral/SubmitTimeResponse")]
        System.IAsyncResult BeginSubmitTime(System.Guid userId, System.Guid trackId, string linkId, string rider, System.TimeSpan time, int faults, string link, System.AsyncCallback callback, object asyncState);
        
        bool EndSubmitTime(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:TrackCentral/NewMessage", ReplyAction="urn:TrackCentral/NewMessageResponse")]
        System.IAsyncResult BeginNewMessage(System.Guid userId, System.Guid trackId, string body, System.AsyncCallback callback, object asyncState);
        
        bool EndNewMessage(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface TrackCentralChannel : Trials.GTC.GlobalTrackCentral.TrackCentral, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ResetUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ResetUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RegisterUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RegisterUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Trials.GTC.GlobalTrackCentral.UserAndRole Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Trials.GTC.GlobalTrackCentral.UserAndRole)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoginUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Trials.GTC.GlobalTrackCentral.UserAndRole Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Trials.GTC.GlobalTrackCentral.UserAndRole)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTracksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTracksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Trials.GTC.GlobalTrackCentral.TracksResults Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Trials.GTC.GlobalTrackCentral.TracksResults)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTrackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTrackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Trials.GTC.GlobalTrackCentral.Track Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Trials.GTC.GlobalTrackCentral.Track)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTagsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTagsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Trials.GTC.GlobalTrackCentral.Tag> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Trials.GTC.GlobalTrackCentral.Tag>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTimesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTimesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Trials.GTC.GlobalTrackCentral.Time> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Trials.GTC.GlobalTrackCentral.Time>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Trials.GTC.GlobalTrackCentral.GetMessagesResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Trials.GTC.GlobalTrackCentral.GetMessagesResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetEventSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEventSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Trials.GTC.GlobalTrackCentral.EventSummaryResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Trials.GTC.GlobalTrackCentral.EventSummaryResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NewTrackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public NewTrackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteTrackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteTrackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SubmitTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SubmitTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NewMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public NewMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TrackCentralClient : System.ServiceModel.ClientBase<Trials.GTC.GlobalTrackCentral.TrackCentral>, Trials.GTC.GlobalTrackCentral.TrackCentral {
        
        private BeginOperationDelegate onBeginResetUserDelegate;
        
        private EndOperationDelegate onEndResetUserDelegate;
        
        private System.Threading.SendOrPostCallback onResetUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginRegisterUserDelegate;
        
        private EndOperationDelegate onEndRegisterUserDelegate;
        
        private System.Threading.SendOrPostCallback onRegisterUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoginUserDelegate;
        
        private EndOperationDelegate onEndLoginUserDelegate;
        
        private System.Threading.SendOrPostCallback onLoginUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTracksDelegate;
        
        private EndOperationDelegate onEndGetTracksDelegate;
        
        private System.Threading.SendOrPostCallback onGetTracksCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTrackDelegate;
        
        private EndOperationDelegate onEndGetTrackDelegate;
        
        private System.Threading.SendOrPostCallback onGetTrackCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTagsDelegate;
        
        private EndOperationDelegate onEndGetTagsDelegate;
        
        private System.Threading.SendOrPostCallback onGetTagsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTimesDelegate;
        
        private EndOperationDelegate onEndGetTimesDelegate;
        
        private System.Threading.SendOrPostCallback onGetTimesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMessagesDelegate;
        
        private EndOperationDelegate onEndGetMessagesDelegate;
        
        private System.Threading.SendOrPostCallback onGetMessagesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetEventSummaryDelegate;
        
        private EndOperationDelegate onEndGetEventSummaryDelegate;
        
        private System.Threading.SendOrPostCallback onGetEventSummaryCompletedDelegate;
        
        private BeginOperationDelegate onBeginNewTrackDelegate;
        
        private EndOperationDelegate onEndNewTrackDelegate;
        
        private System.Threading.SendOrPostCallback onNewTrackCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteTrackDelegate;
        
        private EndOperationDelegate onEndDeleteTrackDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteTrackCompletedDelegate;
        
        private BeginOperationDelegate onBeginSubmitTimeDelegate;
        
        private EndOperationDelegate onEndSubmitTimeDelegate;
        
        private System.Threading.SendOrPostCallback onSubmitTimeCompletedDelegate;
        
        private BeginOperationDelegate onBeginNewMessageDelegate;
        
        private EndOperationDelegate onEndNewMessageDelegate;
        
        private System.Threading.SendOrPostCallback onNewMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public TrackCentralClient() {
        }
        
        public TrackCentralClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TrackCentralClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TrackCentralClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TrackCentralClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<ResetUserCompletedEventArgs> ResetUserCompleted;
        
        public event System.EventHandler<RegisterUserCompletedEventArgs> RegisterUserCompleted;
        
        public event System.EventHandler<LoginUserCompletedEventArgs> LoginUserCompleted;
        
        public event System.EventHandler<GetTracksCompletedEventArgs> GetTracksCompleted;
        
        public event System.EventHandler<GetTrackCompletedEventArgs> GetTrackCompleted;
        
        public event System.EventHandler<GetTagsCompletedEventArgs> GetTagsCompleted;
        
        public event System.EventHandler<GetTimesCompletedEventArgs> GetTimesCompleted;
        
        public event System.EventHandler<GetMessagesCompletedEventArgs> GetMessagesCompleted;
        
        public event System.EventHandler<GetEventSummaryCompletedEventArgs> GetEventSummaryCompleted;
        
        public event System.EventHandler<NewTrackCompletedEventArgs> NewTrackCompleted;
        
        public event System.EventHandler<DeleteTrackCompletedEventArgs> DeleteTrackCompleted;
        
        public event System.EventHandler<SubmitTimeCompletedEventArgs> SubmitTimeCompleted;
        
        public event System.EventHandler<NewMessageCompletedEventArgs> NewMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trials.GTC.GlobalTrackCentral.TrackCentral.BeginResetUser(string username, string emailAddress, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginResetUser(username, emailAddress, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Trials.GTC.GlobalTrackCentral.TrackCentral.EndResetUser(System.IAsyncResult result) {
            return base.Channel.EndResetUser(result);
        }
        
        private System.IAsyncResult OnBeginResetUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            string emailAddress = ((string)(inValues[1]));
            return ((Trials.GTC.GlobalTrackCentral.TrackCentral)(this)).BeginResetUser(username, emailAddress, callback, asyncState);
        }
        
        private object[] OnEndResetUser(System.IAsyncResult result) {
            string retVal = ((Trials.GTC.GlobalTrackCentral.TrackCentral)(this)).EndResetUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnResetUserCompleted(object state) {
            if ((this.ResetUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ResetUserCompleted(this, new ResetUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ResetUserAsync(string username, string emailAddress) {
            this.ResetUserAsync(username, emailAddress, null);
        }
        
        public void ResetUserAsync(string username, string emailAddress, object userState) {
            if ((this.onBeginResetUserDelegate == null)) {
                this.onBeginResetUserDelegate = new BeginOperationDelegate(this.OnBeginResetUser);
            }
            if ((this.onEndResetUserDelegate == null)) {
                this.onEndResetUserDelegate = new EndOperationDelegate(this.OnEndResetUser);
            }
            if ((this.onResetUserCompletedDelegate == null)) {
                this.onResetUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnResetUserCompleted);
            }
            base.InvokeAsync(this.onBeginResetUserDelegate, new object[] {
                        username,
                        emailAddress}, this.onEndResetUserDelegate, this.onResetUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trials.GTC.GlobalTrackCentral.TrackCentral.BeginRegisterUser(string username, string password, string emailAddress, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRegisterUser(username, password, emailAddress, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trials.GTC.GlobalTrackCentral.UserAndRole Trials.GTC.GlobalTrackCentral.TrackCentral.EndRegisterUser(System.IAsyncResult result) {
            return base.Channel.EndRegisterUser(result);
        }
        
        private System.IAsyncResult OnBeginRegisterUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            string emailAddress = ((string)(inValues[2]));
            return ((Trials.GTC.GlobalTrackCentral.TrackCentral)(this)).BeginRegisterUser(username, password, emailAddress, callback, asyncState);
        }
        
        private object[] OnEndRegisterUser(System.IAsyncResult result) {
            Trials.GTC.GlobalTrackCentral.UserAndRole retVal = ((Trials.GTC.GlobalTrackCentral.TrackCentral)(this)).EndRegisterUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRegisterUserCompleted(object state) {
            if ((this.RegisterUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RegisterUserCompleted(this, new RegisterUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RegisterUserAsync(string username, string password, string emailAddress) {
            this.RegisterUserAsync(username, password, emailAddress, null);
        }
        
        public void RegisterUserAsync(string username, string password, string emailAddress, object userState) {
            if ((this.onBeginRegisterUserDelegate == null)) {
                this.onBeginRegisterUserDelegate = new BeginOperationDelegate(this.OnBeginRegisterUser);
            }
            if ((this.onEndRegisterUserDelegate == null)) {
                this.onEndRegisterUserDelegate = new EndOperationDelegate(this.OnEndRegisterUser);
            }
            if ((this.onRegisterUserCompletedDelegate == null)) {
                this.onRegisterUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRegisterUserCompleted);
            }
            base.InvokeAsync(this.onBeginRegisterUserDelegate, new object[] {
                        username,
                        password,
                        emailAddress}, this.onEndRegisterUserDelegate, this.onRegisterUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trials.GTC.GlobalTrackCentral.TrackCentral.BeginLoginUser(string username, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoginUser(username, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trials.GTC.GlobalTrackCentral.UserAndRole Trials.GTC.GlobalTrackCentral.TrackCentral.EndLoginUser(System.IAsyncResult result) {
            return base.Channel.EndLoginUser(result);
        }
        
        private System.IAsyncResult OnBeginLoginUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return ((Trials.GTC.GlobalTrackCentral.TrackCentral)(this)).BeginLoginUser(username, password, callback, asyncState);
        }
        
        private object[] OnEndLoginUser(System.IAsyncResult result) {
            Trials.GTC.GlobalTrackCentral.UserAndRole retVal = ((Trials.GTC.GlobalTrackCentral.TrackCentral)(this)).EndLoginUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoginUserCompleted(object state) {
            if ((this.LoginUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoginUserCompleted(this, new LoginUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoginUserAsync(string username, string password) {
            this.LoginUserAsync(username, password, null);
        }
        
        public void LoginUserAsync(string username, string password, object userState) {
            if ((this.onBeginLoginUserDelegate == null)) {
                this.onBeginLoginUserDelegate = new BeginOperationDelegate(this.OnBeginLoginUser);
            }
            if ((this.onEndLoginUserDelegate == null)) {
                this.onEndLoginUserDelegate = new EndOperationDelegate(this.OnEndLoginUser);
            }
            if ((this.onLoginUserCompletedDelegate == null)) {
                this.onLoginUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoginUserCompleted);
            }
            base.InvokeAsync(this.onBeginLoginUserDelegate, new object[] {
                        username,
                        password}, this.onEndLoginUserDelegate, this.onLoginUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trials.GTC.GlobalTrackCentral.TrackCentral.BeginGetTracks(int pageNumber, int resultsPerPage, System.Nullable<int> trials, System.Nullable<int> type, System.Nullable<int> difficulty, string creator, string keyword, string sortName, bool sortDirection, System.Collections.ObjectModel.ObservableCollection<System.Guid> tags, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTracks(pageNumber, resultsPerPage, trials, type, difficulty, creator, keyword, sortName, sortDirection, tags, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trials.GTC.GlobalTrackCentral.TracksResults Trials.GTC.GlobalTrackCentral.TrackCentral.EndGetTracks(System.IAsyncResult result) {
            return base.Channel.EndGetTracks(result);
        }
        
        private System.IAsyncResult OnBeginGetTracks(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int pageNumber = ((int)(inValues[0]));
            int resultsPerPage = ((int)(inValues[1]));
            System.Nullable<int> trials = ((System.Nullable<int>)(inValues[2]));
            System.Nullable<int> type = ((System.Nullable<int>)(inValues[3]));
            System.Nullable<int> difficulty = ((System.Nullable<int>)(inValues[4]));
            string creator = ((string)(inValues[5]));
            string keyword = ((string)(inValues[6]));
            string sortName = ((string)(inValues[7]));
            bool sortDirection = ((bool)(inValues[8]));
            System.Collections.ObjectModel.ObservableCollection<System.Guid> tags = ((System.Collections.ObjectModel.ObservableCollection<System.Guid>)(inValues[9]));
            return ((Trials.GTC.GlobalTrackCentral.TrackCentral)(this)).BeginGetTracks(pageNumber, resultsPerPage, trials, type, difficulty, creator, keyword, sortName, sortDirection, tags, callback, asyncState);
        }
        
        private object[] OnEndGetTracks(System.IAsyncResult result) {
            Trials.GTC.GlobalTrackCentral.TracksResults retVal = ((Trials.GTC.GlobalTrackCentral.TrackCentral)(this)).EndGetTracks(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTracksCompleted(object state) {
            if ((this.GetTracksCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTracksCompleted(this, new GetTracksCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTracksAsync(int pageNumber, int resultsPerPage, System.Nullable<int> trials, System.Nullable<int> type, System.Nullable<int> difficulty, string creator, string keyword, string sortName, bool sortDirection, System.Collections.ObjectModel.ObservableCollection<System.Guid> tags) {
            this.GetTracksAsync(pageNumber, resultsPerPage, trials, type, difficulty, creator, keyword, sortName, sortDirection, tags, null);
        }
        
        public void GetTracksAsync(int pageNumber, int resultsPerPage, System.Nullable<int> trials, System.Nullable<int> type, System.Nullable<int> difficulty, string creator, string keyword, string sortName, bool sortDirection, System.Collections.ObjectModel.ObservableCollection<System.Guid> tags, object userState) {
            if ((this.onBeginGetTracksDelegate == null)) {
                this.onBeginGetTracksDelegate = new BeginOperationDelegate(this.OnBeginGetTracks);
            }
            if ((this.onEndGetTracksDelegate == null)) {
                this.onEndGetTracksDelegate = new EndOperationDelegate(this.OnEndGetTracks);
            }
            if ((this.onGetTracksCompletedDelegate == null)) {
                this.onGetTracksCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTracksCompleted);
            }
            base.InvokeAsync(this.onBeginGetTracksDelegate, new object[] {
                        pageNumber,
                        resultsPerPage,
                        trials,
                        type,
                        difficulty,
                        creator,
                        keyword,
                        sortName,
                        sortDirection,
                        tags}, this.onEndGetTracksDelegate, this.onGetTracksCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trials.GTC.GlobalTrackCentral.TrackCentral.BeginGetTrack(string linkId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTrack(linkId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trials.GTC.GlobalTrackCentral.Track Trials.GTC.GlobalTrackCentral.TrackCentral.EndGetTrack(System.IAsyncResult result) {
            return base.Channel.EndGetTrack(result);
        }
        
        private System.IAsyncResult OnBeginGetTrack(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string linkId = ((string)(inValues[0]));
            return ((Trials.GTC.GlobalTrackCentral.TrackCentral)(this)).BeginGetTrack(linkId, callback, asyncState);
        }
        
        private object[] OnEndGetTrack(System.IAsyncResult result) {
            Trials.GTC.GlobalTrackCentral.Track retVal = ((Trials.GTC.GlobalTrackCentral.TrackCentral)(this)).EndGetTrack(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTrackCompleted(object state) {
            if ((this.GetTrackCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTrackCompleted(this, new GetTrackCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTrackAsync(string linkId) {
            this.GetTrackAsync(linkId, null);
        }
        
        public void GetTrackAsync(string linkId, object userState) {
            if ((this.onBeginGetTrackDelegate == null)) {
                this.onBeginGetTrackDelegate = new BeginOperationDelegate(this.OnBeginGetTrack);
            }
            if ((this.onEndGetTrackDelegate == null)) {
                this.onEndGetTrackDelegate = new EndOperationDelegate(this.OnEndGetTrack);
            }
            if ((this.onGetTrackCompletedDelegate == null)) {
                this.onGetTrackCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTrackCompleted);
            }
            base.InvokeAsync(this.onBeginGetTrackDelegate, new object[] {
                        linkId}, this.onEndGetTrackDelegate, this.onGetTrackCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trials.GTC.GlobalTrackCentral.TrackCentral.BeginGetTags(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTags(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Trials.GTC.GlobalTrackCentral.Tag> Trials.GTC.GlobalTrackCentral.TrackCentral.EndGetTags(System.IAsyncResult result) {
            return base.Channel.EndGetTags(result);
        }
        
        private System.IAsyncResult OnBeginGetTags(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Trials.GTC.GlobalTrackCentral.TrackCentral)(this)).BeginGetTags(callback, asyncState);
        }
        
        private object[] OnEndGetTags(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Trials.GTC.GlobalTrackCentral.Tag> retVal = ((Trials.GTC.GlobalTrackCentral.TrackCentral)(this)).EndGetTags(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTagsCompleted(object state) {
            if ((this.GetTagsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTagsCompleted(this, new GetTagsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTagsAsync() {
            this.GetTagsAsync(null);
        }
        
        public void GetTagsAsync(object userState) {
            if ((this.onBeginGetTagsDelegate == null)) {
                this.onBeginGetTagsDelegate = new BeginOperationDelegate(this.OnBeginGetTags);
            }
            if ((this.onEndGetTagsDelegate == null)) {
                this.onEndGetTagsDelegate = new EndOperationDelegate(this.OnEndGetTags);
            }
            if ((this.onGetTagsCompletedDelegate == null)) {
                this.onGetTagsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTagsCompleted);
            }
            base.InvokeAsync(this.onBeginGetTagsDelegate, null, this.onEndGetTagsDelegate, this.onGetTagsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trials.GTC.GlobalTrackCentral.TrackCentral.BeginGetTimes(System.Guid trackId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTimes(trackId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Trials.GTC.GlobalTrackCentral.Time> Trials.GTC.GlobalTrackCentral.TrackCentral.EndGetTimes(System.IAsyncResult result) {
            return base.Channel.EndGetTimes(result);
        }
        
        private System.IAsyncResult OnBeginGetTimes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid trackId = ((System.Guid)(inValues[0]));
            return ((Trials.GTC.GlobalTrackCentral.TrackCentral)(this)).BeginGetTimes(trackId, callback, asyncState);
        }
        
        private object[] OnEndGetTimes(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Trials.GTC.GlobalTrackCentral.Time> retVal = ((Trials.GTC.GlobalTrackCentral.TrackCentral)(this)).EndGetTimes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTimesCompleted(object state) {
            if ((this.GetTimesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTimesCompleted(this, new GetTimesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTimesAsync(System.Guid trackId) {
            this.GetTimesAsync(trackId, null);
        }
        
        public void GetTimesAsync(System.Guid trackId, object userState) {
            if ((this.onBeginGetTimesDelegate == null)) {
                this.onBeginGetTimesDelegate = new BeginOperationDelegate(this.OnBeginGetTimes);
            }
            if ((this.onEndGetTimesDelegate == null)) {
                this.onEndGetTimesDelegate = new EndOperationDelegate(this.OnEndGetTimes);
            }
            if ((this.onGetTimesCompletedDelegate == null)) {
                this.onGetTimesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTimesCompleted);
            }
            base.InvokeAsync(this.onBeginGetTimesDelegate, new object[] {
                        trackId}, this.onEndGetTimesDelegate, this.onGetTimesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trials.GTC.GlobalTrackCentral.TrackCentral.BeginGetMessages(System.Guid trackId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMessages(trackId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Trials.GTC.GlobalTrackCentral.GetMessagesResult> Trials.GTC.GlobalTrackCentral.TrackCentral.EndGetMessages(System.IAsyncResult result) {
            return base.Channel.EndGetMessages(result);
        }
        
        private System.IAsyncResult OnBeginGetMessages(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid trackId = ((System.Guid)(inValues[0]));
            return ((Trials.GTC.GlobalTrackCentral.TrackCentral)(this)).BeginGetMessages(trackId, callback, asyncState);
        }
        
        private object[] OnEndGetMessages(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Trials.GTC.GlobalTrackCentral.GetMessagesResult> retVal = ((Trials.GTC.GlobalTrackCentral.TrackCentral)(this)).EndGetMessages(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMessagesCompleted(object state) {
            if ((this.GetMessagesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMessagesCompleted(this, new GetMessagesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMessagesAsync(System.Guid trackId) {
            this.GetMessagesAsync(trackId, null);
        }
        
        public void GetMessagesAsync(System.Guid trackId, object userState) {
            if ((this.onBeginGetMessagesDelegate == null)) {
                this.onBeginGetMessagesDelegate = new BeginOperationDelegate(this.OnBeginGetMessages);
            }
            if ((this.onEndGetMessagesDelegate == null)) {
                this.onEndGetMessagesDelegate = new EndOperationDelegate(this.OnEndGetMessages);
            }
            if ((this.onGetMessagesCompletedDelegate == null)) {
                this.onGetMessagesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMessagesCompleted);
            }
            base.InvokeAsync(this.onBeginGetMessagesDelegate, new object[] {
                        trackId}, this.onEndGetMessagesDelegate, this.onGetMessagesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trials.GTC.GlobalTrackCentral.TrackCentral.BeginGetEventSummary(System.Guid tagId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEventSummary(tagId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Trials.GTC.GlobalTrackCentral.EventSummaryResult> Trials.GTC.GlobalTrackCentral.TrackCentral.EndGetEventSummary(System.IAsyncResult result) {
            return base.Channel.EndGetEventSummary(result);
        }
        
        private System.IAsyncResult OnBeginGetEventSummary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid tagId = ((System.Guid)(inValues[0]));
            return ((Trials.GTC.GlobalTrackCentral.TrackCentral)(this)).BeginGetEventSummary(tagId, callback, asyncState);
        }
        
        private object[] OnEndGetEventSummary(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Trials.GTC.GlobalTrackCentral.EventSummaryResult> retVal = ((Trials.GTC.GlobalTrackCentral.TrackCentral)(this)).EndGetEventSummary(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetEventSummaryCompleted(object state) {
            if ((this.GetEventSummaryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEventSummaryCompleted(this, new GetEventSummaryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEventSummaryAsync(System.Guid tagId) {
            this.GetEventSummaryAsync(tagId, null);
        }
        
        public void GetEventSummaryAsync(System.Guid tagId, object userState) {
            if ((this.onBeginGetEventSummaryDelegate == null)) {
                this.onBeginGetEventSummaryDelegate = new BeginOperationDelegate(this.OnBeginGetEventSummary);
            }
            if ((this.onEndGetEventSummaryDelegate == null)) {
                this.onEndGetEventSummaryDelegate = new EndOperationDelegate(this.OnEndGetEventSummary);
            }
            if ((this.onGetEventSummaryCompletedDelegate == null)) {
                this.onGetEventSummaryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEventSummaryCompleted);
            }
            base.InvokeAsync(this.onBeginGetEventSummaryDelegate, new object[] {
                        tagId}, this.onEndGetEventSummaryDelegate, this.onGetEventSummaryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trials.GTC.GlobalTrackCentral.TrackCentral.BeginNewTrack(Trials.GTC.GlobalTrackCentral.NewTrack n, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNewTrack(n, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Trials.GTC.GlobalTrackCentral.TrackCentral.EndNewTrack(System.IAsyncResult result) {
            return base.Channel.EndNewTrack(result);
        }
        
        private System.IAsyncResult OnBeginNewTrack(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Trials.GTC.GlobalTrackCentral.NewTrack n = ((Trials.GTC.GlobalTrackCentral.NewTrack)(inValues[0]));
            return ((Trials.GTC.GlobalTrackCentral.TrackCentral)(this)).BeginNewTrack(n, callback, asyncState);
        }
        
        private object[] OnEndNewTrack(System.IAsyncResult result) {
            bool retVal = ((Trials.GTC.GlobalTrackCentral.TrackCentral)(this)).EndNewTrack(result);
            return new object[] {
                    retVal};
        }
        
        private void OnNewTrackCompleted(object state) {
            if ((this.NewTrackCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.NewTrackCompleted(this, new NewTrackCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void NewTrackAsync(Trials.GTC.GlobalTrackCentral.NewTrack n) {
            this.NewTrackAsync(n, null);
        }
        
        public void NewTrackAsync(Trials.GTC.GlobalTrackCentral.NewTrack n, object userState) {
            if ((this.onBeginNewTrackDelegate == null)) {
                this.onBeginNewTrackDelegate = new BeginOperationDelegate(this.OnBeginNewTrack);
            }
            if ((this.onEndNewTrackDelegate == null)) {
                this.onEndNewTrackDelegate = new EndOperationDelegate(this.OnEndNewTrack);
            }
            if ((this.onNewTrackCompletedDelegate == null)) {
                this.onNewTrackCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNewTrackCompleted);
            }
            base.InvokeAsync(this.onBeginNewTrackDelegate, new object[] {
                        n}, this.onEndNewTrackDelegate, this.onNewTrackCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trials.GTC.GlobalTrackCentral.TrackCentral.BeginDeleteTrack(System.Guid id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteTrack(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Trials.GTC.GlobalTrackCentral.TrackCentral.EndDeleteTrack(System.IAsyncResult result) {
            return base.Channel.EndDeleteTrack(result);
        }
        
        private System.IAsyncResult OnBeginDeleteTrack(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid id = ((System.Guid)(inValues[0]));
            return ((Trials.GTC.GlobalTrackCentral.TrackCentral)(this)).BeginDeleteTrack(id, callback, asyncState);
        }
        
        private object[] OnEndDeleteTrack(System.IAsyncResult result) {
            bool retVal = ((Trials.GTC.GlobalTrackCentral.TrackCentral)(this)).EndDeleteTrack(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteTrackCompleted(object state) {
            if ((this.DeleteTrackCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteTrackCompleted(this, new DeleteTrackCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteTrackAsync(System.Guid id) {
            this.DeleteTrackAsync(id, null);
        }
        
        public void DeleteTrackAsync(System.Guid id, object userState) {
            if ((this.onBeginDeleteTrackDelegate == null)) {
                this.onBeginDeleteTrackDelegate = new BeginOperationDelegate(this.OnBeginDeleteTrack);
            }
            if ((this.onEndDeleteTrackDelegate == null)) {
                this.onEndDeleteTrackDelegate = new EndOperationDelegate(this.OnEndDeleteTrack);
            }
            if ((this.onDeleteTrackCompletedDelegate == null)) {
                this.onDeleteTrackCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteTrackCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteTrackDelegate, new object[] {
                        id}, this.onEndDeleteTrackDelegate, this.onDeleteTrackCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trials.GTC.GlobalTrackCentral.TrackCentral.BeginSubmitTime(System.Guid userId, System.Guid trackId, string linkId, string rider, System.TimeSpan time, int faults, string link, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSubmitTime(userId, trackId, linkId, rider, time, faults, link, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Trials.GTC.GlobalTrackCentral.TrackCentral.EndSubmitTime(System.IAsyncResult result) {
            return base.Channel.EndSubmitTime(result);
        }
        
        private System.IAsyncResult OnBeginSubmitTime(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid userId = ((System.Guid)(inValues[0]));
            System.Guid trackId = ((System.Guid)(inValues[1]));
            string linkId = ((string)(inValues[2]));
            string rider = ((string)(inValues[3]));
            System.TimeSpan time = ((System.TimeSpan)(inValues[4]));
            int faults = ((int)(inValues[5]));
            string link = ((string)(inValues[6]));
            return ((Trials.GTC.GlobalTrackCentral.TrackCentral)(this)).BeginSubmitTime(userId, trackId, linkId, rider, time, faults, link, callback, asyncState);
        }
        
        private object[] OnEndSubmitTime(System.IAsyncResult result) {
            bool retVal = ((Trials.GTC.GlobalTrackCentral.TrackCentral)(this)).EndSubmitTime(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSubmitTimeCompleted(object state) {
            if ((this.SubmitTimeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SubmitTimeCompleted(this, new SubmitTimeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SubmitTimeAsync(System.Guid userId, System.Guid trackId, string linkId, string rider, System.TimeSpan time, int faults, string link) {
            this.SubmitTimeAsync(userId, trackId, linkId, rider, time, faults, link, null);
        }
        
        public void SubmitTimeAsync(System.Guid userId, System.Guid trackId, string linkId, string rider, System.TimeSpan time, int faults, string link, object userState) {
            if ((this.onBeginSubmitTimeDelegate == null)) {
                this.onBeginSubmitTimeDelegate = new BeginOperationDelegate(this.OnBeginSubmitTime);
            }
            if ((this.onEndSubmitTimeDelegate == null)) {
                this.onEndSubmitTimeDelegate = new EndOperationDelegate(this.OnEndSubmitTime);
            }
            if ((this.onSubmitTimeCompletedDelegate == null)) {
                this.onSubmitTimeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSubmitTimeCompleted);
            }
            base.InvokeAsync(this.onBeginSubmitTimeDelegate, new object[] {
                        userId,
                        trackId,
                        linkId,
                        rider,
                        time,
                        faults,
                        link}, this.onEndSubmitTimeDelegate, this.onSubmitTimeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trials.GTC.GlobalTrackCentral.TrackCentral.BeginNewMessage(System.Guid userId, System.Guid trackId, string body, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNewMessage(userId, trackId, body, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Trials.GTC.GlobalTrackCentral.TrackCentral.EndNewMessage(System.IAsyncResult result) {
            return base.Channel.EndNewMessage(result);
        }
        
        private System.IAsyncResult OnBeginNewMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid userId = ((System.Guid)(inValues[0]));
            System.Guid trackId = ((System.Guid)(inValues[1]));
            string body = ((string)(inValues[2]));
            return ((Trials.GTC.GlobalTrackCentral.TrackCentral)(this)).BeginNewMessage(userId, trackId, body, callback, asyncState);
        }
        
        private object[] OnEndNewMessage(System.IAsyncResult result) {
            bool retVal = ((Trials.GTC.GlobalTrackCentral.TrackCentral)(this)).EndNewMessage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnNewMessageCompleted(object state) {
            if ((this.NewMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.NewMessageCompleted(this, new NewMessageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void NewMessageAsync(System.Guid userId, System.Guid trackId, string body) {
            this.NewMessageAsync(userId, trackId, body, null);
        }
        
        public void NewMessageAsync(System.Guid userId, System.Guid trackId, string body, object userState) {
            if ((this.onBeginNewMessageDelegate == null)) {
                this.onBeginNewMessageDelegate = new BeginOperationDelegate(this.OnBeginNewMessage);
            }
            if ((this.onEndNewMessageDelegate == null)) {
                this.onEndNewMessageDelegate = new EndOperationDelegate(this.OnEndNewMessage);
            }
            if ((this.onNewMessageCompletedDelegate == null)) {
                this.onNewMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNewMessageCompleted);
            }
            base.InvokeAsync(this.onBeginNewMessageDelegate, new object[] {
                        userId,
                        trackId,
                        body}, this.onEndNewMessageDelegate, this.onNewMessageCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Trials.GTC.GlobalTrackCentral.TrackCentral CreateChannel() {
            return new TrackCentralClientChannel(this);
        }
        
        private class TrackCentralClientChannel : ChannelBase<Trials.GTC.GlobalTrackCentral.TrackCentral>, Trials.GTC.GlobalTrackCentral.TrackCentral {
            
            public TrackCentralClientChannel(System.ServiceModel.ClientBase<Trials.GTC.GlobalTrackCentral.TrackCentral> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginResetUser(string username, string emailAddress, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = username;
                _args[1] = emailAddress;
                System.IAsyncResult _result = base.BeginInvoke("ResetUser", _args, callback, asyncState);
                return _result;
            }
            
            public string EndResetUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("ResetUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRegisterUser(string username, string password, string emailAddress, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = username;
                _args[1] = password;
                _args[2] = emailAddress;
                System.IAsyncResult _result = base.BeginInvoke("RegisterUser", _args, callback, asyncState);
                return _result;
            }
            
            public Trials.GTC.GlobalTrackCentral.UserAndRole EndRegisterUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                Trials.GTC.GlobalTrackCentral.UserAndRole _result = ((Trials.GTC.GlobalTrackCentral.UserAndRole)(base.EndInvoke("RegisterUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginLoginUser(string username, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = username;
                _args[1] = password;
                System.IAsyncResult _result = base.BeginInvoke("LoginUser", _args, callback, asyncState);
                return _result;
            }
            
            public Trials.GTC.GlobalTrackCentral.UserAndRole EndLoginUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                Trials.GTC.GlobalTrackCentral.UserAndRole _result = ((Trials.GTC.GlobalTrackCentral.UserAndRole)(base.EndInvoke("LoginUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTracks(int pageNumber, int resultsPerPage, System.Nullable<int> trials, System.Nullable<int> type, System.Nullable<int> difficulty, string creator, string keyword, string sortName, bool sortDirection, System.Collections.ObjectModel.ObservableCollection<System.Guid> tags, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[10];
                _args[0] = pageNumber;
                _args[1] = resultsPerPage;
                _args[2] = trials;
                _args[3] = type;
                _args[4] = difficulty;
                _args[5] = creator;
                _args[6] = keyword;
                _args[7] = sortName;
                _args[8] = sortDirection;
                _args[9] = tags;
                System.IAsyncResult _result = base.BeginInvoke("GetTracks", _args, callback, asyncState);
                return _result;
            }
            
            public Trials.GTC.GlobalTrackCentral.TracksResults EndGetTracks(System.IAsyncResult result) {
                object[] _args = new object[0];
                Trials.GTC.GlobalTrackCentral.TracksResults _result = ((Trials.GTC.GlobalTrackCentral.TracksResults)(base.EndInvoke("GetTracks", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTrack(string linkId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = linkId;
                System.IAsyncResult _result = base.BeginInvoke("GetTrack", _args, callback, asyncState);
                return _result;
            }
            
            public Trials.GTC.GlobalTrackCentral.Track EndGetTrack(System.IAsyncResult result) {
                object[] _args = new object[0];
                Trials.GTC.GlobalTrackCentral.Track _result = ((Trials.GTC.GlobalTrackCentral.Track)(base.EndInvoke("GetTrack", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTags(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetTags", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Trials.GTC.GlobalTrackCentral.Tag> EndGetTags(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Trials.GTC.GlobalTrackCentral.Tag> _result = ((System.Collections.ObjectModel.ObservableCollection<Trials.GTC.GlobalTrackCentral.Tag>)(base.EndInvoke("GetTags", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTimes(System.Guid trackId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = trackId;
                System.IAsyncResult _result = base.BeginInvoke("GetTimes", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Trials.GTC.GlobalTrackCentral.Time> EndGetTimes(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Trials.GTC.GlobalTrackCentral.Time> _result = ((System.Collections.ObjectModel.ObservableCollection<Trials.GTC.GlobalTrackCentral.Time>)(base.EndInvoke("GetTimes", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMessages(System.Guid trackId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = trackId;
                System.IAsyncResult _result = base.BeginInvoke("GetMessages", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Trials.GTC.GlobalTrackCentral.GetMessagesResult> EndGetMessages(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Trials.GTC.GlobalTrackCentral.GetMessagesResult> _result = ((System.Collections.ObjectModel.ObservableCollection<Trials.GTC.GlobalTrackCentral.GetMessagesResult>)(base.EndInvoke("GetMessages", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetEventSummary(System.Guid tagId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = tagId;
                System.IAsyncResult _result = base.BeginInvoke("GetEventSummary", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Trials.GTC.GlobalTrackCentral.EventSummaryResult> EndGetEventSummary(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Trials.GTC.GlobalTrackCentral.EventSummaryResult> _result = ((System.Collections.ObjectModel.ObservableCollection<Trials.GTC.GlobalTrackCentral.EventSummaryResult>)(base.EndInvoke("GetEventSummary", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginNewTrack(Trials.GTC.GlobalTrackCentral.NewTrack n, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = n;
                System.IAsyncResult _result = base.BeginInvoke("NewTrack", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndNewTrack(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("NewTrack", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteTrack(System.Guid id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("DeleteTrack", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndDeleteTrack(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("DeleteTrack", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSubmitTime(System.Guid userId, System.Guid trackId, string linkId, string rider, System.TimeSpan time, int faults, string link, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = userId;
                _args[1] = trackId;
                _args[2] = linkId;
                _args[3] = rider;
                _args[4] = time;
                _args[5] = faults;
                _args[6] = link;
                System.IAsyncResult _result = base.BeginInvoke("SubmitTime", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndSubmitTime(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("SubmitTime", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginNewMessage(System.Guid userId, System.Guid trackId, string body, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = userId;
                _args[1] = trackId;
                _args[2] = body;
                System.IAsyncResult _result = base.BeginInvoke("NewMessage", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndNewMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("NewMessage", _args, result)));
                return _result;
            }
        }
    }
}
